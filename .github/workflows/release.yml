name: .NET
on:
  push:
    tags:
      - "v*"
jobs:
  build:
    env:
      dllName: ChangeLevelChat
      releasePath: /home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/bin/Release

    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ["7.0.x"]

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release

      - name: Create zip
        run: cd ${releasePath} && mv net7.0 $dllName && zip -r ${dllName}.zip ${dllName}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ${{env.releasePath}}/${{env.dllName}}.zip
          asset_name: ${{env.dllName}}_${{github.ref_name}}.zip
          asset_content_type: application/zip
